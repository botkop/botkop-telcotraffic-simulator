# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.crypto.secret="cUri2PEyYENp6M76ndydl59MlZXsflPwxU<Cw59HCStC2aRvA^stxzd>`8tj8P=R"

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# play.http.router = my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.username=sa
# db.default.password=""

db.default.driver = org.sqlite.JDBC
db.default.url = "jdbc:sqlite:data/traffic.db" # see also build.sbt, for settings in development mode

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# play.evolutions.enabled=false

# You can disable evolutions for a specific datasource if necessary
# play.evolutions.db.default.enabled=false

# Akka
# ~~~~~

play.akka.actor-system = "TrafficSimulatorSystem"

akka {

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    debug {
      receive = on
      lifecycle = on
    }
  }
  akka.extensions = ["akka.cluster.pubsub.DistributedPubSub"]
}

####################
# Cluster config
akka {

  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
  }

  cluster {
    seed-nodes = [
      # "akka.tcp://TrafficSimulatorSystem@127.0.0.1:2551"
      "akka.tcp://TrafficSimulatorSystem@127.0.0.1:2552"
    ]
    auto-down-unreachable-after = 10s
    roles = [ publish, simulate ]
  }

  # do not use this !
  # akka.actor.deployment {
     # /TrafficSimulator/singleton/TripRouter/ {
       # router = consistent-hashing-pool
       # cluster {
         # enabled = on
         # max-nr-of-instances-per-node = 3
         # allow-local-routees = on
         # use-role = simulate
       # }
     # }
   # }

}

traffic.cluster.router.pool {
  total-instances = 10
  max-instances-per-node = 3
  allow-local-routees = true
  use-role = "simulate"
}

# Disable legacy metrics in akka-cluster.
akka.cluster.metrics.enabled=off

# Message Brokers
# ~~~~~
messageBrokers = [ webSocketBroker, kafkaBroker ]

socketBroker {
  class = "traffic.brokers.SocketBroker"
  properties {
    topics = [
      {
        topic = "celltower-topic"
        host = "localhost"
        port = 8901
      }

      {
        topic = "subscriber-topic"
        host = "localhost"
        port = 8902
      }

    ]
  }
}

logBroker {
  class = "traffic.brokers.LogBroker"
}

webSocketBroker {
  class = "traffic.brokers.WebSocketBroker"
}

kafkaBroker {
  class = "traffic.brokers.KafkaBroker"
  properties {
    bootstrap.servers = "localhost:9092"
    acks = "all"
    key.serializer = "org.apache.kafka.common.serialization.StringSerializer"
    value.serializer = "org.apache.kafka.common.serialization.StringSerializer"
  }
}

# Private stuff
# ~~~~~
# include credentials and other private stuff
# this file should contain the following keys:
#   google.api.key: see https://developers.google.com/maps/documentation/javascript/get-api-key
include "cred.conf"

# Celltower configuration
# ~~~~~
include "celltowers.conf"

